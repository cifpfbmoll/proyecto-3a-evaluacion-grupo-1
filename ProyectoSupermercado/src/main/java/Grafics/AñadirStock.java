/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafics;

import Main.Classes.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.geom.RoundRectangle2D;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jaume
 */
public class AñadirStock extends javax.swing.JFrame {

    /**
     * Creates new form EliminarTarjeta
     */
    private ArrayList <StockProducto> listaStock;
    private boolean gestionesHechas=false;
    
    public AñadirStock() {
        initComponents();
        añadirStockProducto();
        this.nombreSupermercado.setText(Main.getSupermercadoActivo().getLocalitat());
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
    public Image getIconImage(){
        Image miIcono=Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/logo1.png"));
        return miIcono;
    }

    public ArrayList<StockProducto> getListaStock() {
        return listaStock;
    }

    public void setListaStock(ArrayList<StockProducto> listaStock) {
        this.listaStock = listaStock;
    }

    public boolean isGestionesHechas() {
        return gestionesHechas;
    }

    public void setGestionesHechas(boolean gestionesHechas) {
        this.gestionesHechas = gestionesHechas;
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codigoProducto = new javax.swing.JComboBox<>();
        cantidad = new javax.swing.JSpinner();
        botonSalir = new javax.swing.JButton();
        botonAñadir = new javax.swing.JButton();
        nombreSupermercado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("  METRADONA©");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(450, 219));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(618, 222));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        codigoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        getContentPane().add(codigoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 430, 40));
        getContentPane().add(cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 60, 40));

        botonSalir.setBackground(new java.awt.Color(102, 102, 102));
        botonSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("SALIR");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 100, 30));

        botonAñadir.setBackground(new java.awt.Color(102, 102, 102));
        botonAñadir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonAñadir.setForeground(new java.awt.Color(255, 255, 255));
        botonAñadir.setText("AÑADIR");
        botonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirActionPerformed(evt);
            }
        });
        getContentPane().add(botonAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 210, 40));

        nombreSupermercado.setBackground(new java.awt.Color(255, 255, 255));
        nombreSupermercado.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        nombreSupermercado.setForeground(new java.awt.Color(255, 255, 255));
        nombreSupermercado.setText(" ");
        getContentPane().add(nombreSupermercado, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("AÑADIR STOCK");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Green-Wallpaper-5.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(618, 222));
        jLabel1.setMinimumSize(new java.awt.Dimension(618, 222));
        jLabel1.setPreferredSize(new java.awt.Dimension(618, 222));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 220));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirActionPerformed
        try {
            String id=this.codigoProducto.getSelectedItem().toString().split("-")[0];
            Main.getSupermercadoActivo().añadirStock(Integer.parseInt(id),(int)cantidad.getValue());
            if (this.isGestionesHechas()){
                StockProducto.ficheroGestionStock(this.codigoProducto.getSelectedItem().toString().split("-")[1], 
                cantidad.getValue().toString(), Main.getSupermercadoActivo().getLocalitat());
            }
            else{
                StockProducto.ficheroGestionFecha(Main.getSupermercadoActivo().getLocalitat());
                StockProducto.ficheroGestionStock(this.codigoProducto.getSelectedItem().toString().split("-")[1], 
                cantidad.getValue().toString(), Main.getSupermercadoActivo().getLocalitat());
                this.setGestionesHechas(true);
            }
            Herramientas.aviso((int)cantidad.getValue()+""+this.codigoProducto.getSelectedItem().toString().split("-")[1]
            +"se han añadido al stock de su supermercado");
            this.añadirStockProducto();
            this.revalidate();
            this.repaint();
        } catch (SQLException | IOException ex) {
            Herramientas.aviso("Ha ocurrido un error al añadir los productos");
            Excepciones.pasarExcepcionLog("Ha ocurrido un error al añadir los productos", ex);
        }
    }//GEN-LAST:event_botonAñadirActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed
    
    public void añadirStockProducto(){
        try {
            this.setListaStock(Main.getSupermercadoActivo().getStockSupermercado());
            String[] listaInfoStock=new String[this.getListaStock().size()];
            for(int i=0;i<this.getListaStock().size();i++){
                PreparedStatement query=Herramientas.getConexion().prepareStatement("SELECT * FROM producto WHERE codigo_producto=?");
                query.setInt(1,this.getListaStock().get(i).getCodigoProducto());
                ResultSet resultado=query.executeQuery();
                if (resultado.next()) {
                    String info=""+this.getListaStock().get(i).getCodigoProducto()+"- "+
                    resultado.getString("nombre_producto")+" - Cantidad: "+this.getListaStock().get(i).getCantidad()
                    ;
                    listaInfoStock[i]=info;
                }
            }
            codigoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(listaInfoStock));
        } catch (SQLException ex) {
            Herramientas.aviso("Ha ocurrido un error al cargar a los productos");
            Excepciones.pasarExcepcionLog("Ha ocurrido un error al cargar a los productos", ex);
            this.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAñadir;
    private javax.swing.JButton botonSalir;
    private javax.swing.JSpinner cantidad;
    private javax.swing.JComboBox<String> codigoProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel nombreSupermercado;
    // End of variables declaration//GEN-END:variables
}
